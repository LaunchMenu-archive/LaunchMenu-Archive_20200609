{"version":3,"sources":["../../src/testing/reporter.js"],"names":["noopTimer","start","elapsed","ElectronReporter","constructor","options","console","log","arguments","timer","status","started","finished","runDetails","executionTime","suites","suitesHash","specs","jasmineStarted","jasmineDone","suiteStarted","result","id","suiteDone","push","suiteResults","index","length","slice","specDone","specResults"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAY;AACZC,WAAO,YAAU,CAAE,CADP;AAEZC,aAAS,YAAU;AAAE,eAAO,CAAP;AAAW;AAFpB,CAAhB;AAIe,MAAMC,gBAAN,CAAsB;AACjCC,gBAAYC,OAAZ,EAAoB;AAChBC,gBAAQC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AACA,aAAKC,KAAL,GAAaJ,QAAQI,KAAR,IAAiBT,SAA9B;AACA,aAAKU,MAAL,GAAc,QAAd;;AAEA,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKC,UAAL,GAAkB,EAAlB;;AAEA,aAAKC,aAAL;AACA,aAAKD,UAAL;AACA,aAAKE,MAAL,GAAc,EAAd;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,KAAL,GAAa,EAAb;AACH;;AAED;AACAC,qBAAgB;AACZZ,gBAAQC,GAAR,CAAY,gBAAZ,EAA8BC,SAA9B;AACA,aAAKG,OAAL,GAAe,IAAf;AACA,aAAKD,MAAL,GAAc,SAAd;AACA,aAAKD,KAAL,CAAWR,KAAX;AACH;AACDkB,gBAAYN,UAAZ,EAAuB;AACnBP,gBAAQC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AACA,aAAKI,QAAL,GAAgB,IAAhB;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,aAAL,GAAqBL,MAAMP,OAAN,EAArB;AACA,aAAKQ,MAAL,GAAc,MAAd;AACH;AACDA,aAAQ;AACJJ,gBAAQC,GAAR,CAAY,QAAZ,EAAsBC,SAAtB;AACA,eAAO,KAAKE,MAAZ;AACH;;AAED;AACAU,iBAAaC,MAAb,EAAoB;AAChBf,gBAAQC,GAAR,CAAY,cAAZ,EAA4BC,SAA5B;AACA,aAAKQ,UAAL,CAAgBK,OAAOC,EAAvB,IAA6BD,MAA7B;AACH;AACDE,cAAUF,MAAV,EAAiB;AACbf,gBAAQC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB;AACA,aAAKO,MAAL,CAAYS,IAAZ,CAAiBH,MAAjB;AACA,aAAKL,UAAL,CAAgBK,OAAOC,EAAvB,IAA6BD,MAA7B;AACH;AACDI,iBAAaC,KAAb,EAAoBC,MAApB,EAA2B;AACvBrB,gBAAQC,GAAR,CAAY,cAAZ,EAA4BC,SAA5B;AACA,eAAO,KAAKO,MAAL,CAAYa,KAAZ,CAAkBF,KAAlB,EAAyBA,QAAMC,MAA/B,CAAP;AACH;AACDZ,aAAQ;AACJT,gBAAQC,GAAR,CAAY,QAAZ,EAAsBC,SAAtB;AACA,eAAO,KAAKQ,UAAZ;AACH;;AAED;AACAa,aAASR,MAAT,EAAgB;AACZf,gBAAQC,GAAR,CAAY,UAAZ,EAAwBC,SAAxB;AACA,aAAKS,KAAL,CAAWO,IAAX,CAAgBH,MAAhB;AACH;AACDS,gBAAYJ,KAAZ,EAAmBC,MAAnB,EAA0B;AACtBrB,gBAAQC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AACA,eAAO,KAAKS,KAAL,CAAWW,KAAX,CAAiBF,KAAjB,EAAwBA,QAAQC,MAAhC,CAAP;AACH;AACDV,YAAO;AACHX,gBAAQC,GAAR,CAAY,OAAZ,EAAqBC,SAArB;AACA,eAAO,KAAKS,KAAZ;AACH;AAnEgC;kBAAhBd,gB","file":"reporter.js","sourcesContent":["var noopTimer = {\r\n    start: function(){},\r\n    elapsed: function(){ return 0; }\r\n};\r\nexport default class ElectronReporter{\r\n    constructor(options){\r\n        console.log(\"constructor\", arguments);\r\n        this.timer = options.timer || noopTimer;\r\n        this.status = 'loaded';\r\n\r\n        this.started = false;\r\n        this.finished = false;\r\n        this.runDetails = {};\r\n\r\n        this.executionTime;\r\n        this.runDetails;\r\n        this.suites = [];\r\n        this.suitesHash = {};\r\n        this.specs = [];\r\n    }\r\n\r\n    // General methods\r\n    jasmineStarted(){\r\n        console.log(\"jasmineStarted\", arguments);\r\n        this.started = true;\r\n        this.status = 'started';\r\n        this.timer.start();\r\n    }\r\n    jasmineDone(runDetails){\r\n        console.log(\"jasmineDone\", arguments);\r\n        this.finished = true;\r\n        this.runDetails = runDetails;\r\n        this.executionTime = timer.elapsed();\r\n        this.status = 'done';\r\n    }\r\n    status(){\r\n        console.log(\"status\", arguments);\r\n        return this.status;\r\n    }\r\n\r\n    // Suite methods\r\n    suiteStarted(result){\r\n        console.log(\"suiteStarted\", arguments);\r\n        this.suitesHash[result.id] = result;\r\n    }\r\n    suiteDone(result){\r\n        console.log(\"suiteDone\", arguments);\r\n        this.suites.push(result);\r\n        this.suitesHash[result.id] = result;\r\n    }\r\n    suiteResults(index, length){\r\n        console.log(\"suiteResults\", arguments);\r\n        return this.suites.slice(index, index+length);\r\n    }\r\n    suites(){\r\n        console.log(\"suites\", arguments);\r\n        return this.suitesHash;\r\n    }\r\n\r\n    // Spec methods\r\n    specDone(result){\r\n        console.log(\"specDone\", arguments);\r\n        this.specs.push(result);\r\n    }\r\n    specResults(index, length){\r\n        console.log(\"specResults\", arguments);\r\n        return this.specs.slice(index, index + length);\r\n    }\r\n    specs(){\r\n        console.log(\"specs\", arguments);\r\n        return this.specs;\r\n    }\r\n}\r\n"]}