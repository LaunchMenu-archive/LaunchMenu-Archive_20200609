{"version":3,"sources":["../../../src/core/registry/requestPath.js"],"names":["RequestPath","constructor","path","Array","toString","split","map","module","ID","Number","modules","unique","join","getSubPath","removeCount","requestPath","splice","length","augmentPath","push","getModuleID","index","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;AACA,MAAMA,WAAN,CAAiB;AACbC,gBAAYC,IAAZ,EAAiB;AACb,YAAG,OAAOA,IAAP,IAAc,QAAd,IAA0B,EAAEA,gBAAgBC,KAAlB,CAA7B,EACID,OAAOA,KAAKE,QAAL,EAAP;AACJ,YAAG,OAAOF,IAAP,IAAc,QAAjB,EAA0B;AACtBA,mBAAOA,KACEG,KADF,CACQ,IADR,EAEEC,GAFF,CAEMC,UAAQ;AACTA,yBAASA,OAAOF,KAAP,CAAa,GAAb,CAAT;AACA,uBAAO;AACHE,4BAAQA,OAAO,CAAP,CADL;AAEHC,wBAAIC,OAAOF,OAAO,CAAP,KAAW,CAAlB;AAFD,iBAAP;AAIH,aARF,CAAP;AASH;;AAED,aAAKG,OAAL,GAAeR,IAAf;AACH;AACDE,aAASO,MAAT,EAAgB;AACZ,eAAO,KAAKD,OAAL,CACFJ,GADE,CACEC,UAAQ;AACT,gBAAGI,MAAH,EACI,OAAOJ,OAAOA,MAAP,GAAc,GAAd,GAAkBA,OAAOC,EAAhC;AACJ,mBAAOD,OAAOA,MAAP,GAAc,EAArB;AACH,SALE,EAMFK,IANE,CAMG,IANH,CAAP;AAOH;AACDC,eAAWC,WAAX,EAAuB;AACnB,cAAMC,cAAc,IAAIf,WAAJ,CAAgB,KAAKI,QAAL,CAAc,IAAd,CAAhB,CAApB;AACA,cAAMM,UAAUK,YAAYL,OAA5B;AACAA,gBAAQM,MAAR,CAAeN,QAAQO,MAAR,GAAeH,WAA9B,EAA2CA,WAA3C;AACA,eAAOC,WAAP;AACH;AACDG,gBAAYX,MAAZ,EAAoBC,EAApB,EAAuB;AACnB,YAAG,OAAOD,MAAP,IAAgB,QAAnB,EACIA,SAASA,OAAOH,QAAP,EAAT;AACJ,cAAMW,cAAc,IAAIf,WAAJ,CAAgB,KAAKI,QAAL,CAAc,IAAd,CAAhB,CAApB;AACAW,oBAAYL,OAAZ,CAAoBS,IAApB,CAAyB;AACrBZ,oBAAQA,MADa;AAErBC,gBAAIC,OAAOD,MAAI,CAAX;AAFiB,SAAzB;AAIA,eAAOO,WAAP;AACH;AACDK,gBAAYC,KAAZ,EAAkB;AACd,YAAGA,SAAOC,SAAV,EACID,QAAQ,KAAKX,OAAL,CAAaO,MAAb,GAAoB,CAA5B;AACJ,eAAO,KAAKP,OAAL,CAAaW,KAAb,CAAP;AACH;AA/CY;kBAiDFrB,W","file":"requestPath.js","sourcesContent":["import IPC from \"../communication/IPC\";\r\nimport Module from \"./module\";\r\nclass RequestPath{\r\n    constructor(path){\r\n        if(typeof(path)!=\"string\" && !(path instanceof Array))\r\n            path = path.toString();\r\n        if(typeof(path)==\"string\"){\r\n            path = path\r\n                    .split(\"->\")\r\n                    .map(module=>{\r\n                        module = module.split(\":\");\r\n                        return {\r\n                            module: module[0],\r\n                            ID: Number(module[1]||0)\r\n                        };\r\n                    });\r\n        }\r\n\r\n        this.modules = path;\r\n    }\r\n    toString(unique){\r\n        return this.modules\r\n            .map(module=>{\r\n                if(unique)\r\n                    return module.module+\":\"+module.ID;\r\n                return module.module+\"\";\r\n            })\r\n            .join(\"->\");\r\n    }\r\n    getSubPath(removeCount){\r\n        const requestPath = new RequestPath(this.toString(true));\r\n        const modules = requestPath.modules;\r\n        modules.splice(modules.length-removeCount, removeCount);\r\n        return requestPath;\r\n    }\r\n    augmentPath(module, ID){\r\n        if(typeof(module)!=\"string\")\r\n            module = module.toString();\r\n        const requestPath = new RequestPath(this.toString(true));\r\n        requestPath.modules.push({\r\n            module: module,\r\n            ID: Number(ID||0)\r\n        });\r\n        return requestPath;\r\n    }\r\n    getModuleID(index){\r\n        if(index==undefined)\r\n            index = this.modules.length-1;\r\n        return this.modules[index];\r\n    }\r\n}\r\nexport default RequestPath;\r\n"]}