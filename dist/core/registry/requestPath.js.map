{"version":3,"sources":["../../../src/core/registry/requestPath.js"],"names":["RequestPath","constructor","path","split","map","module","ID","modules","toString","unique","join","getSubPath","removeCount","requestPath","splice","length","augmentPath","push","getModuleID","index","undefined"],"mappings":";;;;;;;;AAAA;;;;;;AACA,MAAMA,WAAN,CAAiB;AACbC,gBAAYC,IAAZ,EAAiB;AACb,YAAG,OAAOA,IAAP,IAAc,QAAjB,EAA0B;AACtBA,mBAAOA,KACEC,KADF,CACQ,IADR,EAEEC,GAFF,CAEMC,UAAQ;AACTA,yBAASA,OAAOF,KAAP,CAAa,GAAb,CAAT;AACA,uBAAO;AACHE,4BAAQA,OAAO,CAAP,CADL;AAEHC,wBAAID,OAAO,CAAP,KAAW;AAFZ,iBAAP;AAIH,aARF,CAAP;AASH;;AAED,aAAKE,OAAL,GAAeL,IAAf;AACH;AACDM,aAASC,MAAT,EAAgB;AACZ,eAAO,KAAKF,OAAL,CACFH,GADE,CACEC,UAAQ;AACT,gBAAGI,MAAH,EACI,OAAOJ,OAAOA,MAAP,GAAc,GAAd,GAAkBA,OAAOC,EAAhC;AACJ,mBAAOD,OAAOA,MAAP,GAAc,EAArB;AACH,SALE,EAMFK,IANE,CAMG,IANH,CAAP;AAOH;AACDC,eAAWC,WAAX,EAAuB;AACnB,cAAMC,cAAc,IAAIb,WAAJ,CAAgB,KAAKQ,QAAL,CAAc,IAAd,CAAhB,CAApB;AACA,cAAMD,UAAUM,YAAYN,OAA5B;AACAA,gBAAQO,MAAR,CAAeP,QAAQQ,MAAR,GAAeH,WAA9B,EAA2CA,WAA3C;AACA,eAAOC,WAAP;AACH;AACDG,gBAAYX,MAAZ,EAAoBC,EAApB,EAAuB;AACnB,cAAMO,cAAc,IAAIb,WAAJ,CAAgB,KAAKQ,QAAL,CAAc,IAAd,CAAhB,CAApB;AACAK,oBAAYN,OAAZ,CAAoBU,IAApB,CAAyB;AACrBZ,oBAAQA,MADa;AAErBC,gBAAIA;AAFiB,SAAzB;AAIA,eAAOO,WAAP;AACH;AACDK,gBAAYC,KAAZ,EAAkB;AACd,YAAGA,SAAOC,SAAV,EACID,QAAQ,KAAKZ,OAAL,CAAaQ,MAAb,GAAoB,CAA5B;AACJ,eAAO,KAAKR,OAAL,CAAaY,KAAb,CAAP;AACH;AA3CY;kBA6CFnB,W","file":"requestPath.js","sourcesContent":["import IPC from \"../communication/IPC\";\r\nclass RequestPath{\r\n    constructor(path){\r\n        if(typeof(path)==\"string\"){\r\n            path = path\r\n                    .split(\"->\")\r\n                    .map(module=>{\r\n                        module = module.split(\":\");\r\n                        return {\r\n                            module: module[0],\r\n                            ID: module[1]||0\r\n                        };\r\n                    });\r\n        }\r\n\r\n        this.modules = path;\r\n    }\r\n    toString(unique){\r\n        return this.modules\r\n            .map(module=>{\r\n                if(unique)\r\n                    return module.module+\":\"+module.ID;\r\n                return module.module+\"\";\r\n            })\r\n            .join(\"->\");\r\n    }\r\n    getSubPath(removeCount){\r\n        const requestPath = new RequestPath(this.toString(true));\r\n        const modules = requestPath.modules;\r\n        modules.splice(modules.length-removeCount, removeCount);\r\n        return requestPath;\r\n    }\r\n    augmentPath(module, ID){\r\n        const requestPath = new RequestPath(this.toString(true));\r\n        requestPath.modules.push({\r\n            module: module,\r\n            ID: ID\r\n        });\r\n        return requestPath;\r\n    }\r\n    getModuleID(index){\r\n        if(index==undefined)\r\n            index = this.modules.length-1;\r\n        return this.modules[index];\r\n    }\r\n}\r\nexport default RequestPath;\r\n"]}