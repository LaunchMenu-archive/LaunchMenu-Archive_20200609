{"version":3,"sources":["../../src/Test/index.jsx"],"names":["el","console","log","document","getElementById","ReactDOM","render","obj","test","stuff","value","n","ExtendedJSON","decode","encode","IPC","send","data","on","event","Registry","requestModule","type","then","module","instance","setSomething","Channel","createSender","channel","doSomething","doSomethingElse","onColor","createReceiver","smth","somethingThatDoesntExist","poop"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAYA;;;;AAYA;;;;AAUA;;;;;;AAjCA;;AAEA,IAAIA,KACA;AAAA;AAAA,MAAK,WAAU,MAAf;AAAA;AAAA,CADJ;AAKAC,QAAQC,GAAR,CAAYC,SAASC,cAAT,CAAwB,MAAxB,CAAZ;AACAC,mBAASC,MAAT,CAAgBN,EAAhB,EAAoBG,SAASC,cAAT,CAAwB,MAAxB,CAApB;;AAEA;;AAEA,IAAIG,MAAM;AACNC,UAAM,CADA;AAENC,WAAO,MAFD;AAGNF,SAAK;AACDG,eAAO;AADN;AAHC,CAAV;AAOAH,IAAIA,GAAJ,CAAQI,CAAR,GAAYJ,IAAIA,GAAhB;AACAN,QAAQC,GAAR,CAAYU,uBAAaC,MAAb,CAAoBD,uBAAaE,MAAb,CAAoBP,GAApB,CAApB,CAAZ,EAA2DA,GAA3D;;AAEA;;AAEAQ,cAAIC,IAAJ,CAAS,MAAT,EAAiB,EAACC,MAAK,CAAN,EAAjB,EAA2B,CAA3B;AACAF,cAAIG,EAAJ,CAAO,MAAP,EAAgBC,KAAD,IAAS;AACpBlB,YAAQC,GAAR,CAAY,MAAZ,EAAoBiB,KAApB;AACH,CAFD;AAGAJ,cAAIG,EAAJ,CAAO,MAAP,EAAgBC,KAAD,IAAS;AACpBlB,YAAQC,GAAR,CAAY,MAAZ,EAAoBiB,KAApB;AACH,CAFD;;AAIA;;AAEAC,mBAASC,aAAT,CAAuB,EAACC,MAAK,MAAN,EAAvB,EAAsCC,IAAtC,CAA2CC,UAAQ;AAC/CvB,YAAQC,GAAR,CAAYsB,MAAZ;;AAEA;AACA,QAAIC,WAAW,IAAID,MAAJ,CAAW,SAAX,CAAf;AACAC,aAASC,YAAT,CAAsB,WAAtB;;AAEAX,kBAAIC,IAAJ,CAAS,wBAAT,EAAmCS,QAAnC,EAA6C,CAA7C;AACH,CARD;;AAUA;AACAE,kBAAQC,YAAR,CAAqB,UAArB,EAAiC,UAAjC,EAA6C,MAA7C,EAAqDL,IAArD,CAA0DM,WAAS;AAC/D5B,YAAQC,GAAR,CAAY,mBAAZ;AACA2B,YAAQC,WAAR,CAAoB,QAApB;AACAD,YAAQE,eAAR,CAAwB,MAAxB;AACAF,YAAQG,OAAR,CAAgB,QAAhB;AACH,CALD;AAMA,IAAIH,UAAUF,kBAAQM,cAAR,CAAuB,MAAvB,EAA+B;AACzCC,UAAMf,SAAO;AACTlB,gBAAQC,GAAR,CAAY,MAAZ,EAAoBiB,KAApB;AACH;AAHwC,CAA/B,CAAd;;AAMA;AACAlB,QAAQC,GAAR,CAAYiC,yBAAyBC,IAAzB,EAAZ","file":"index.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport importTest from \"./importTest\";\r\nimport Channel from \"../core/communication/channel\";\r\nimportTest();\r\n\r\nvar el = (\r\n    <div className=\"test\">\r\n      Click me (though nothing will happen)\r\n    </div>\r\n);\r\nconsole.log(document.getElementById('root'));\r\nReactDOM.render(el, document.getElementById('root'));\r\n\r\n// ExtendedJSON testing\r\nimport ExtendedJSON from \"../core/communication/ExtendedJSON\";\r\nvar obj = {\r\n    test: 5,\r\n    stuff: \"test\",\r\n    obj: {\r\n        value: 3\r\n    },\r\n};\r\nobj.obj.n = obj.obj;\r\nconsole.log(ExtendedJSON.decode(ExtendedJSON.encode(obj)), obj);\r\n\r\n// IPC testing\r\nimport IPC from \"../core/communication/IPC\";\r\nIPC.send(\"ping\", {data:1}, 0);\r\nIPC.on(\"pong\", (event)=>{\r\n    console.log(\"pong\", event);\r\n});\r\nIPC.on(\"ping\", (event)=>{\r\n    console.log(\"ping\", event);\r\n});\r\n\r\n// Module registry test\r\nimport Registry from \"../core/registry/registry\";\r\nRegistry.requestModule({type:\"test\"}).then(module=>{\r\n    console.log(module);\r\n\r\n    // Module instance transfer test\r\n    var instance = new module(\"itsName\");\r\n    instance.setSomething(\"someValue\");\r\n\r\n    IPC.send(\"moduleInstanceTransfer\", instance, 0);\r\n});\r\n\r\n// Channel test\r\nChannel.createSender(\"TestName\", \"getColor\", \"crap\").then(channel=>{\r\n    console.log(\"set up connection\");\r\n    channel.doSomething(\"cheese\");\r\n    channel.doSomethingElse(\"crap\");\r\n    channel.onColor(\"purple\");\r\n});\r\nvar channel = Channel.createReceiver(\"crap\", {\r\n    smth: event=>{\r\n        console.log(\"smth\", event);\r\n    }\r\n});\r\n\r\n// Error message test with source mapping:\r\nconsole.log(somethingThatDoesntExist.poop());\r\n"]}