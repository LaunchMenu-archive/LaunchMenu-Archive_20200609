{"version":3,"sources":["../../src/Test/main.js"],"names":["app","on","LM","Registry","_loadAllModules","then","data","TestModule2","requestModule","type","testModule2instance","testModule2instance2","requestHandle","repeat","channel","setTimeout","setName","catch","e","console","error"],"mappings":";;+CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAPA;;AAQA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACAA,cAAIC,EAAJ,CAAO,OAAP,EAAgB,YAAW;AACvBC,iBAAGC,QAAH,CAAYC,eAAZ,GACKC,IADL,CACUC,QAAQ;AACV,cAAMC,cAAcL,aAAGC,QAAH,CAAYK,aAAZ,CAA0B,EAACC,MAAM,OAAP,EAA1B,CAApB;AACA,cAAMC,sBAAsB,IAAIH,WAAJ,EAA5B;AACA,cAAMI,uBAAuB,IAAIJ,WAAJ,EAA7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,6BACKC,aADL,CACmB;AACXH,kBAAM,aADK;AAEXH,kBAAM;AACFO,wBAAQ;AADN;AAFK,SADnB,EAOKR,IAPL,CAOUS,WAAW;AACbC,uBAAW,MAAM;AACbD,wBAAQE,OAAR,CAAgB,aAAhB;AACH,aAFD,EAEG,IAFH;AAGH,SAXL,EAYKC,KAZL,CAYWC,KAAKC,QAAQC,KAAR,CAAcF,CAAd,CAZhB;;AAcA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAtEL,EAuEKD,KAvEL,CAuEWC,KAAK;AACRC,gBAAQC,KAAR,CAAcF,CAAd;AACH,KAzEL;AA0EH,CA3ED","file":"main.js","sourcesContent":["//this is merely some test code\r\nimport {app, BrowserWindow} from \"electron\";\r\n// import url from \"url\";\r\n// import path from \"path\";\r\n// import IPC from \"../core/communication/IPC\";\r\n// import Registry from \"../core/registry/registry\";\r\n// import RequestPath from \"../core/registry/requestPath\";\r\n// import SettingsHandler from \"../core/communication/data/settings/settingsHandler\";\r\n// import WindowHandler from \"../core/window/windowHandler\";\r\nimport LM from \"LM\";\r\n// var {app, BrowserWindow} = require('electron');\r\n// var mainWindow;\r\n// app.on('window-all-closed', function() {\r\n//   \tif (process.platform != 'darwin') {\r\n//     \tapp.quit();\r\n//   \t}\r\n// });\r\n// app.on('ready', function() {\r\n// \tmainWindow = new BrowserWindow({width: 1360, height: 800});\r\n// \t// mainWindow.loadURL(url.format({\r\n// \t//   pathname: \"www.google.com\",\r\n// \t//   protocol: 'https:',\r\n// \t//   slashes: true\r\n// \t// }));\r\n// \tmainWindow.loadURL(url.format({\r\n// \t\tpathname: path.join(process.cwd(), \"dist\", \"Test\", \"index.html\"),\r\n// \t\tprotocol: 'file:',\r\n// \t\tslashes: true\r\n// \t}))\r\n// \tmainWindow.openDevTools();\r\n// \tmainWindow.on('closed', function() {\r\n// \t\tmainWindow = null;\r\n// \t});\r\n//\r\n// \t// Register window\r\n// \tIPC._registerWindow(mainWindow);\r\n// });\r\n\r\n// Module registry\r\n// Registry._loadModule(\"alerts.config\");\r\n// Registry._loadModule(\"multiAlert\");\r\n// Registry._loadModule(\"testModule2.config\");\r\n\r\n// Open a window\r\n// console.log(LM);\r\napp.on(\"ready\", function() {\r\n    LM.Registry._loadAllModules()\r\n        .then(data => {\r\n            const TestModule2 = LM.Registry.requestModule({type: \"test2\"});\r\n            const testModule2instance = new TestModule2();\r\n            const testModule2instance2 = new TestModule2();\r\n\r\n            // testModule2instance\r\n            //     .requestHandle({\r\n            //         type: \"multiAlert\",\r\n            //     })\r\n            //     .then(channel => {\r\n            //         channel\r\n            //             .alert(\"poooopy pants\")\r\n            //             .then(() => {\r\n            //                 return channel.alert(\"Nuts\");\r\n            //             })\r\n            //             .then(() => {\r\n            //                 return channel.close();\r\n            //             });\r\n            //     });\r\n            // testModule2instance2\r\n            //     .requestHandle({\r\n            //         type: \"multiAlert\",\r\n            //     })\r\n            //     .then(channel => {\r\n            //         channel.alert(\"testing\").then(() => {\r\n            //             return channel.close();\r\n            //         });\r\n            //     });\r\n            // testModule2instance2\r\n            //     .requestHandle({\r\n            //         type: \"alert\",\r\n            //     })\r\n            //     .then(channel => {\r\n            //         channel.alert(\"single alert\").then(() => {\r\n            //             return channel.close();\r\n            //         });\r\n            //     });\r\n\r\n            testModule2instance2\r\n                .requestHandle({\r\n                    type: \"testElement\",\r\n                    data: {\r\n                        repeat: true,\r\n                    },\r\n                })\r\n                .then(channel => {\r\n                    setTimeout(() => {\r\n                        channel.setName(\"Poopy Pants\");\r\n                    }, 2000);\r\n                })\r\n                .catch(e => console.error(e));\r\n\r\n            // testModule2instance\r\n            //     .requestHandle({type: \"stress\"})\r\n            //     .then(channel => {\r\n            //         channel.test();\r\n            //     });\r\n\r\n            // WindowHandler.open(1).then(data=>{\r\n            //     console.log(\"Window opened\", data);\r\n            //     Registry.requestHandle({\r\n            //         type: \"test\",\r\n            //         source: testModule2,\r\n            //     }).then(result=>{\r\n            //         console.log(result);\r\n            //     });\r\n            // }).catch(err=>{\r\n            //     console.error(err);\r\n            // });\r\n        })\r\n        .catch(e => {\r\n            console.error(e);\r\n        });\r\n});\r\n"]}